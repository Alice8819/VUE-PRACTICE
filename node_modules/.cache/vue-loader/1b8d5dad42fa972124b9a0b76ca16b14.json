{"remainingRequest":"C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\资料\\OneDrive\\1 课程\\VUE\\VUE-PRACTICE\\Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\资料\\OneDrive\\1 课程\\VUE\\VUE-PRACTICE\\Tree.vue","mtime":1593503727802},{"path":"C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJ0cmVlLXNlbGYiLA0KICBwcm9wczogew0KICAgIGRhdGE6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGNvbXBvbmVudHM6IHt9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzaG93QXJyOiBbXQ0KICAgIH07DQogIH0sDQogIG1vdW50ZWQoKSB7fSwNCiAgbWV0aG9kczogew0KICAgIGhhbmRsZUNsaWNrVHJlZSh0cmVlKSB7DQogICAgICAgIGlmICghdHJlZS5ib29sZWFuKSB7DQogICAgICAgICAgdGhpcy4kc2V0KHRyZWUsICJib29sZWFuIiwgdHJ1ZSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgY29uc3QgcmVzID0gIXRyZWUuYm9vbGVhbjsNCiAgICAgICAgICB0aGlzLiRzZXQodHJlZSwgImJvb2xlYW4iLCByZXMpOw0KICAgICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tree.vue","sourceRoot":".","sourcesContent":["<template>\r\n  <ul class=\"tree-list\">\r\n    <li v-for=\"tree in data\" :key=\"tree.label\" @click.stop=\"handleClickTree(tree)\" class=\"tree\">\r\n      <i class=\"tree-icon iconfont \" v-if=\"tree.children\" :class=\"{'iconfont-down':!tree.boolean ,'iconfont-right':tree.boolean }\"></i>\r\n      <span class=\"tree-cont\">{{tree.label}}</span>\r\n      <tree-self :data=\"tree.children\" v-if=\"tree.children && tree.boolean\" />\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"tree-self\",\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      showArr: []\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    handleClickTree(tree) {\r\n        if (!tree.boolean) {\r\n          this.$set(tree, \"boolean\", true);\r\n        } else {\r\n          const res = !tree.boolean;\r\n          this.$set(tree, \"boolean\", res);\r\n        }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"./assets/font.css\";\r\n\r\nul {\r\n  list-style: none;\r\n}\r\ni {\r\n  font-style: normal;\r\n  color: rgb(173, 172, 172);\r\n  font-size:12px;\r\n}\r\n.tree .tree-cont {\r\n  margin-left: 10px;\r\n}\r\n\r\n.tree {\r\n  margin: 10px 0;\r\n  cursor: pointer;\r\n}\r\n</style>"]}]}